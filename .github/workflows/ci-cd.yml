name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PACKAGE_PATH: ./package
  PACKAGE_NAME: console_sample
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 5.0.x
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION}}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration ${{ env.CONFIGURATION }}
    - name: Publish
      run: dotnet publish --no-build --configuration ${{ env.CONFIGURATION }} --output "${{ env.PACKAGE_PATH }}"
    - name: Publish Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{ env.PACKAGE_NAME }}
        path: ${{ env.PACKAGE_PATH }}

  development:
    # Avoid to continue if the trigger is a PR
    if: github.event_name == 'push'
    needs: build
    name: Deploy Development Environment
    runs-on: ubuntu-latest
    environment:
      name: Development
    env:
      MYVAL: ${{ secrets.MYVAL }}
    steps:
    # Download artifacts
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.PACKAGE_NAME }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION}}
    - name: Execute 
      run: dotnet ManualApproval.dll    

  # This stage doens't need to use if because the previous stage applies it
  production:
    needs: development
    name: Deploy Production Environment
    runs-on: ubuntu-latest
    environment:
      name: Production
    env:
      MYVAL: ${{ secrets.MYVAL }}
    steps:
    # Download artifacts
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.PACKAGE_NAME }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION}}
    - name: Execute 
      run: dotnet ManualApproval.dll